{"ast":null,"code":"import _classCallCheck from \"/home/jrod/Desktop/backendapi/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jrod/Desktop/backendapi/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jrod/Desktop/backendapi/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jrod/Desktop/backendapi/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jrod/Desktop/backendapi/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jrod/Desktop/backendapi/client/src/components/NewArticle.js\";\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createArticle } from '../actions/index';\nimport PropTypes from 'prop-types';\n\nvar NewArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewArticle, _Component);\n\n  function NewArticle(props) {\n    _classCallCheck(this, NewArticle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NewArticle).call(this, props));\n  }\n\n  _createClass(NewArticle, [{\n    key: \"onSubmit\",\n    value: function onSubmit(props) {\n      var _this = this;\n\n      this.props.createArticle(props).then(function () {\n        _this.context.router.push('/');\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$fields = _this$props.fields,\n          title = _this$props$fields.title,\n          description = _this$props$fields.description,\n          author = _this$props$fields.author,\n          tags = _this$props$fields.tags,\n          handleSubmit = _this$props.handleSubmit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Create an Article\"), React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: \"form-control\"\n      }, title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: \"form-control\"\n      }, description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: \"form-control\"\n      }, author, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Tags\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: \"form-control\"\n      }, tags, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Create Article\")));\n    }\n  }]);\n\n  return NewArticle;\n}(Component);\n\nNewArticle.contextTypes = {\n  handleSubmit: PropTypes.func,\n  router: PropTypes.object,\n  fields: PropTypes.object //will return a promise(axios)\n\n};\nexport default reduxForm({\n  form: 'NewArticleForm',\n  fields: ['title', 'description', 'author', 'tags']\n}, null, {\n  createArticle: createArticle\n})(NewArticle);","map":{"version":3,"sources":["/home/jrod/Desktop/backendapi/client/src/components/NewArticle.js"],"names":["React","Component","reduxForm","createArticle","PropTypes","NewArticle","props","then","context","router","push","catch","err","console","log","fields","title","description","author","tags","handleSubmit","onSubmit","bind","contextTypes","func","object","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAGMC,U;;;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA,mFACRA,KADQ;AAEjB;;;;6BAOQA,K,EAAM;AAAA;;AACX,WAAKA,KAAL,CAAWH,aAAX,CAAyBG,KAAzB,EACAC,IADA,CACK,YAAM;AACP,QAAA,KAAI,CAACC,OAAL,CAAaC,MAAb,CAAoBC,IAApB,CAAyB,GAAzB;AACH,OAHD,EAGGC,KAHH,CAGS,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OALD;AAMH;;;6BAEM;AAAA,wBAC4D,KAAKN,KADjE;AAAA,2CACCS,MADD;AAAA,UACSC,KADT,sBACSA,KADT;AAAA,UACgBC,WADhB,sBACgBA,WADhB;AAAA,UAC6BC,MAD7B,sBAC6BA,MAD7B;AAAA,UACqCC,IADrC,sBACqCA,IADrC;AAAA,UAC4CC,YAD5C,eAC4CA,YAD5C;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAGE;AAAM,QAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC;AAA7B,SAAgDN,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC;AAA7B,SAAgDC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC;AAA7B,SAAgDC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC;AAA7B,SAAgDC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,CADJ,EAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXJ,CAHF,CADF;AAmBD;;;;EAxCsBlB,S;;AAAnBI,U,CAIKkB,Y,GAAe;AAClBH,EAAAA,YAAY,EAAEhB,SAAS,CAACoB,IADN;AAElBf,EAAAA,MAAM,EAAEL,SAAS,CAACqB,MAFA;AAGlBV,EAAAA,MAAM,EAAEX,SAAS,CAACqB,MAHA,CAKtB;;AALsB,C;AAuC1B,eAAevB,SAAS,CAAC;AACrBwB,EAAAA,IAAI,EAAC,gBADgB;AAErBX,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,aAAV,EAAyB,QAAzB,EAAmC,MAAnC;AAFa,CAAD,EAGrB,IAHqB,EAGf;AAAEZ,EAAAA,aAAa,EAAbA;AAAF,CAHe,CAAT,CAGYE,UAHZ,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {reduxForm} from 'redux-form';\nimport { createArticle } from '../actions/index';\nimport PropTypes from 'prop-types';\n\n\nclass NewArticle extends Component {\n    constructor(props){\n        super(props);\n    }\n    static contextTypes = {\n        handleSubmit: PropTypes.func,\n        router: PropTypes.object,\n        fields: PropTypes.object\n    }\n    //will return a promise(axios)\n    onSubmit(props){\n        this.props.createArticle(props).\n        then(() => {\n            this.context.router.push('/');\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n  render() {\n    const { fields:{title, description, author, tags}, handleSubmit} = this.props;\n    return (\n      <div>\n        <h1>Create an Article</h1>\n\n        <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n            <div className=\"form-group\">\n                <label>Title</label>\n                <input type=\"text\" className=\"form-control\" {...title}/>\n                <label>Description</label>\n                <input type=\"text\" className=\"form-control\" {...description}/>\n                <label>Author</label>\n                <input type=\"text\" className=\"form-control\" {...author}/>\n                <label>Tags</label>\n                <input type=\"text\" className=\"form-control\" {...tags}/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-success\">Create Article</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default reduxForm({\n    form:'NewArticleForm',\n    fields: ['title', 'description', 'author', 'tags']\n}, null, { createArticle})(NewArticle)"]},"metadata":{},"sourceType":"module"}